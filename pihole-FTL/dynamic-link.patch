diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index e2d6fac..683f260 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -189,10 +189,10 @@ set(THREADS_PREFER_PTHREAD_FLAG TRUE)
 find_package(Threads REQUIRED)
 
 # for DNSSEC we need the nettle (+ hogweed) crypto and the gmp math libraries
-find_library(LIBHOGWEED libhogweed${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(LIBGMP libgmp${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(LIBNETTLE libnettle${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(LIBIDN libidn${CMAKE_STATIC_LIBRARY_SUFFIX})
+find_library(LIBHOGWEED hogweed)
+find_library(LIBGMP gmp)
+find_library(LIBNETTLE nettle)
+find_library(LIBIDN idn)
 
 target_link_libraries(pihole-FTL rt Threads::Threads ${LIBHOGWEED} ${LIBGMP} ${LIBNETTLE} ${LIBIDN})
 
@@ -201,14 +201,12 @@ if(LUA_DL STREQUAL "true")
     target_link_libraries(pihole-FTL ${LIBDL})
 endif()
 
-find_library(LIBREADLINE libreadline${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(LIBHISTORY libhistory${CMAKE_STATIC_LIBRARY_SUFFIX})
-find_library(LIBTERMCAP libtermcap${CMAKE_STATIC_LIBRARY_SUFFIX})
-if(LIBREADLINE AND LIBHISTORY AND LIBTERMCAP)
+find_library(LIBREADLINE readline)
+if(LIBREADLINE)
     message(STATUS "Building FTL with readline support: YES")
     target_compile_definitions(FTL PRIVATE LUA_USE_READLINE)
     target_compile_definitions(pihole-FTL PRIVATE LUA_USE_READLINE)
-    target_link_libraries(pihole-FTL ${LIBREADLINE} ${LIBHISTORY} ${LIBTERMCAP})
+    target_link_libraries(pihole-FTL ${LIBREADLINE})
 else()
     message(STATUS "Building FTL with readline support: NO")
 endif()
diff --git a/src/lua/CMakeLists.txt b/src/lua/CMakeLists.txt
index 83dff2e..b2207b4 100644
--- a/src/lua/CMakeLists.txt
+++ b/src/lua/CMakeLists.txt
@@ -77,7 +77,7 @@ if(LUA_DL STREQUAL "true")
     target_compile_definitions(lua PRIVATE LUA_USE_DLOPEN)
 endif()
 
-if(LIBREADLINE AND LIBHISTORY AND LIBTERMCAP)
+if(LIBREADLINE)
     message(STATUS "Embedded LUA will use readline for history: YES")
     target_compile_definitions(lua PRIVATE LUA_USE_READLINE)
 else()
